concurrency:
  cancel-in-progress: true
  group: pages
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: list directory
      run: ls -lR
    - id: detect-package-manager
      name: Detect package manager
      run: "if [ -f \"${{ github.workspace }}/yarn.lock\" ]; then\n  echo \"manager=yarn\"\
        \ >> $GITHUB_OUTPUT\n  echo \"command=install\" >> $GITHUB_OUTPUT\n  exit\
        \ 0\nelif [ -f \"${{ github.workspace }}/package.json\" ]; then\n  echo \"\
        manager=npm\" >> $GITHUB_OUTPUT\n  echo \"command=ci\" >> $GITHUB_OUTPUT\n\
        \  exit 0\nelse\n  echo \"Unable to determine packager manager\"\n  exit 1\n\
        fi\n"
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        cache: ${{ steps.detect-package-manager.outputs.manager }}
        node-version: '18'
    - id: pages
      name: Setup Pages
      uses: actions/configure-pages@v2
      with:
        static_site_generator: gatsby
    - name: Restore cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-gatsby-build-${{ hashFiles('public') }}
        path: 'public

          .cache

          '
        restore-keys: '${{ runner.os }}-gatsby-build-

          '
    - name: Install dependencies
      run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command
        }}
    - env:
        PREFIX_PATHS: 'true'
      name: Build with Gatsby
      run: ${{ steps.detect-package-manager.outputs.manager }} run build
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./public
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
    - id: deployment
      name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v1
name: Deploy Gatsby site to Pages
'on':
  push:
    branches: main
  workflow_dispatch: null
permissions:
  contents: read
  id-token: write
  pages: write
